{"/home/richard/Documents/rythm_api/src/app.ts": {"path":"/home/richard/Documents/rythm_api/src/app.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":41}},"5":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":14},"end":{"line":8,"column":30}},"7":{"start":{"line":9,"column":15},"end":{"line":9,"column":32}},"8":{"start":{"line":10,"column":14},"end":{"line":10,"column":38}},"9":{"start":{"line":11,"column":17},"end":{"line":11,"column":36}},"10":{"start":{"line":12,"column":25},"end":{"line":12,"column":53}},"11":{"start":{"line":13,"column":17},"end":{"line":13,"column":36}},"12":{"start":{"line":14,"column":19},"end":{"line":14,"column":41}},"13":{"start":{"line":15,"column":18},"end":{"line":15,"column":47}},"14":{"start":{"line":16,"column":24},"end":{"line":16,"column":50}},"15":{"start":{"line":17,"column":17},"end":{"line":17,"column":36}},"16":{"start":{"line":18,"column":19},"end":{"line":18,"column":33}},"17":{"start":{"line":20,"column":0},"end":{"line":20,"column":50}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":21}},"19":{"start":{"line":24,"column":17},"end":{"line":24,"column":40}},"20":{"start":{"line":25,"column":0},"end":{"line":25,"column":28}},"21":{"start":{"line":26,"column":0},"end":{"line":31,"column":3}},"22":{"start":{"line":27,"column":4},"end":{"line":27,"column":52}},"23":{"start":{"line":29,"column":4},"end":{"line":29,"column":89}},"24":{"start":{"line":33,"column":0},"end":{"line":33,"column":42}},"25":{"start":{"line":34,"column":0},"end":{"line":34,"column":23}},"26":{"start":{"line":35,"column":0},"end":{"line":35,"column":23}},"27":{"start":{"line":36,"column":0},"end":{"line":36,"column":27}},"28":{"start":{"line":37,"column":0},"end":{"line":37,"column":51}},"29":{"start":{"line":38,"column":0},"end":{"line":38,"column":28}},"30":{"start":{"line":39,"column":0},"end":{"line":47,"column":4}},"31":{"start":{"line":48,"column":0},"end":{"line":48,"column":36}},"32":{"start":{"line":49,"column":0},"end":{"line":49,"column":35}},"33":{"start":{"line":50,"column":0},"end":{"line":60,"column":88}},"34":{"start":{"line":54,"column":28},"end":{"line":54,"column":82}},"35":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"36":{"start":{"line":56,"column":12},"end":{"line":56,"column":45}},"37":{"start":{"line":61,"column":0},"end":{"line":68,"column":3}},"38":{"start":{"line":62,"column":4},"end":{"line":67,"column":5}},"39":{"start":{"line":63,"column":8},"end":{"line":66,"column":11}},"40":{"start":{"line":70,"column":0},"end":{"line":70,"column":38}},"41":{"start":{"line":71,"column":0},"end":{"line":71,"column":39}},"42":{"start":{"line":75,"column":0},"end":{"line":75,"column":72}},"43":{"start":{"line":76,"column":0},"end":{"line":76,"column":46}},"44":{"start":{"line":77,"column":0},"end":{"line":81,"column":3}},"45":{"start":{"line":78,"column":4},"end":{"line":80,"column":7}},"46":{"start":{"line":82,"column":0},"end":{"line":82,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":26,"column":58},"end":{"line":26,"column":59}},"loc":{"start":{"line":26,"column":64},"end":{"line":28,"column":1}},"line":26},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":10}},"loc":{"start":{"line":28,"column":16},"end":{"line":31,"column":1}},"line":28},"2":{"name":"fromHeader","decl":{"start":{"line":53,"column":23},"end":{"line":53,"column":33}},"loc":{"start":{"line":53,"column":39},"end":{"line":58,"column":5}},"line":53},"3":{"name":"(anonymous_3)","decl":{"start":{"line":61,"column":8},"end":{"line":61,"column":9}},"loc":{"start":{"line":61,"column":39},"end":{"line":68,"column":1}},"line":61},"4":{"name":"(anonymous_4)","decl":{"start":{"line":77,"column":8},"end":{"line":77,"column":9}},"loc":{"start":{"line":77,"column":23},"end":{"line":81,"column":1}},"line":77}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":22},"end":{"line":20,"column":46}},"type":"binary-expr","locations":[{"start":{"line":20,"column":22},"end":{"line":20,"column":28}},{"start":{"line":20,"column":32},"end":{"line":20,"column":46}}],"line":20},"1":{"loc":{"start":{"line":33,"column":16},"end":{"line":33,"column":40}},"type":"binary-expr","locations":[{"start":{"line":33,"column":16},"end":{"line":33,"column":32}},{"start":{"line":33,"column":36},"end":{"line":33,"column":40}}],"line":33},"2":{"loc":{"start":{"line":54,"column":28},"end":{"line":54,"column":82}},"type":"binary-expr","locations":[{"start":{"line":54,"column":28},"end":{"line":54,"column":53}},{"start":{"line":54,"column":57},"end":{"line":54,"column":82}}],"line":54},"3":{"loc":{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":57,"column":9}},{"start":{"line":55,"column":8},"end":{"line":57,"column":9}}],"line":55},"4":{"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":65}},"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":23}},{"start":{"line":55,"column":27},"end":{"line":55,"column":65}}],"line":55},"5":{"loc":{"start":{"line":62,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":67,"column":5}},{"start":{"line":62,"column":4},"end":{"line":67,"column":5}}],"line":62}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":1},"f":{"0":1,"1":0,"2":1,"3":1,"4":0},"b":{"0":[1,0],"1":[1,1],"2":[1,1],"3":[0,1],"4":[1,0],"5":[1,0]},"inputSourceMap":{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport * as compression from 'compression';  // compresses requests\nimport * as session from 'express-session';\nimport * as bodyParser from 'body-parser';\nimport * as logger from 'morgan';\nimport * as lusca from 'lusca';\nimport * as dotenv from 'dotenv';\nimport * as mongo from 'connect-mongo';\nimport * as mongoose from 'mongoose';\nimport * as expressValidator from 'express-validator';\nimport * as bluebird from 'bluebird';\nimport * as expressJwt from 'express-jwt';\nimport * as swaggerUI from 'swagger-ui-express';\nimport * as swaggerDocument from '../swagger.json';\nimport { AuthRouter, SwaggerAPIRouter, UserRouter } from './routes';\n\nconst MongoStore = mongo(session);\n\n// Load environment variables from .env file, where API keys and passwords are configured\ndotenv.config({path: '.env' || '.env.example'});\n\n// Create Express server\nconst app = express();\n\n// Connect to MongoDB\nconst mongoUrl = process.env.MONGODB_URI;\n(<any>mongoose).Promise = bluebird;\nmongoose.connect(mongoUrl, {useMongoClient: true}).then(\n  () => { /** ready to use. The `mongoose.connect()` promise resolves to undefined. */\n    console.log('MongoDB connected on ' + mongoUrl);\n  },\n).catch(err => {\n  console.log('MongoDB connection error. Please make sure MongoDB is running. ' + err);\n  // process.exit();\n});\n\n// Express configuration\napp.set('port', process.env.PORT || 3000);\napp.use(compression());\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({extended: true}));\napp.use(expressValidator());\napp.use(session({\n  resave: true,\n  saveUninitialized: true,\n  secret: process.env.SESSION_SECRET,\n  store: new MongoStore({\n    url: mongoUrl,\n    autoReconnect: true\n  })\n}));\napp.use(lusca.xframe('SAMEORIGIN'));\napp.use(lusca.xssProtection(true));\n\napp.use(expressJwt({\n    secret: process.env.JWT_SECRET,\n    requestProperty: 'auth',\n    getToken: function fromHeader(req: express.Request) {\n      const tokenHeader = req.headers.Authorization || req.headers.authorization;\n      if (tokenHeader && (tokenHeader as string).split(' ')[0] === 'Bearer') {\n        return (tokenHeader as string).split(' ')[1];\n      }\n    }\n  })\n    .unless({path: [/\\/api-docs\\//g, {url: '/', method: 'OPTIONS'}, /\\/auth\\//g]})\n);\n\napp.use(function (err, req, res, next) {\n  if (err.name === 'UnauthorizedError') {\n    res.status(401).send({\n      msg: 'Invalid or no token supplied',\n      code: 401\n    });\n  }\n});\n\n// express routes\napp.use('/auth', AuthRouter);\napp.use('/users', UserRouter);\n\n/**\n * Add swagger endpoints\n */\napp.use('/api-docs', swaggerUI.serve, swaggerUI.setup(swaggerDocument));\napp.use('/api/v1', SwaggerAPIRouter);\n\napp.use((req: express.Request, resp: express.Response) => {\n  resp.status(404).send({\n    msg: 'Not Found!'\n  });\n});\n\nmodule.exports = app;"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"b7c63f46c2d992357c6556a23692a0124ea3a9d4"}
,"/home/richard/Documents/rythm_api/src/routes.ts": {"path":"/home/richard/Documents/rythm_api/src/routes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":54}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":54}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":37}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":53}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":59}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":75}},"9":{"start":{"line":11,"column":19},"end":{"line":11,"column":37}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"12":{"start":{"line":14,"column":25},"end":{"line":14,"column":43}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":44}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"routes.js","sourceRoot":"","sources":["routes.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,uDAAqD;AACrD,uDAAqD;AAErD,MAAM,UAAU,GAAG,gBAAM,EAAE,CAAC;AAInB,gCAAU;AAHnB,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,mBAAc,CAAC,KAAK,CAAC,CAAC;AAChD,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,mBAAc,CAAC,QAAQ,CAAC,CAAC;AACtD,UAAU,CAAC,GAAG,CAAC,4BAA4B,EAAE,mBAAc,CAAC,QAAQ,CAAC,CAAC;AAGtE,MAAM,UAAU,GAAG,gBAAM,EAAE,CAAC;AAEnB,gCAAU;AADnB,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAc,CAAC,MAAM,CAAC,CAAC;AAG3C,MAAM,gBAAgB,GAAG,gBAAM,EAAE,CAAC;AACzB,4CAAgB","sourcesContent":["import { Router } from 'express';\nimport AuthController from './controllers/auth.ctrl';\nimport UserController from './controllers/user.ctrl';\n\nconst AuthRouter = Router();\nAuthRouter.post('/login', AuthController.login);\nAuthRouter.post('/register', AuthController.register);\nAuthRouter.get('/activate/:activationToken', AuthController.activate);\nexport { AuthRouter };\n\nconst UserRouter = Router();\nUserRouter.get('/', UserController.getAll);\nexport { UserRouter };\n\nconst SwaggerAPIRouter = Router();\nexport { SwaggerAPIRouter };"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"97fba79ac7b83a777513abe448bee53f206049c0"}
,"/home/richard/Documents/rythm_api/src/controllers/auth.ctrl.ts": {"path":"/home/richard/Documents/rythm_api/src/controllers/auth.ctrl.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":12},"end":{"line":11,"column":35}},"13":{"start":{"line":12,"column":13},"end":{"line":12,"column":28}},"14":{"start":{"line":13,"column":15},"end":{"line":13,"column":32}},"15":{"start":{"line":14,"column":19},"end":{"line":14,"column":40}},"16":{"start":{"line":15,"column":20},"end":{"line":15,"column":52}},"17":{"start":{"line":18,"column":8},"end":{"line":59,"column":11}},"18":{"start":{"line":19,"column":12},"end":{"line":19,"column":64}},"19":{"start":{"line":20,"column":12},"end":{"line":20,"column":74}},"20":{"start":{"line":21,"column":12},"end":{"line":21,"column":79}},"21":{"start":{"line":22,"column":27},"end":{"line":22,"column":49}},"22":{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},"23":{"start":{"line":24,"column":16},"end":{"line":27,"column":19}},"24":{"start":{"line":29,"column":12},"end":{"line":58,"column":13}},"25":{"start":{"line":30,"column":29},"end":{"line":30,"column":82}},"26":{"start":{"line":31,"column":16},"end":{"line":36,"column":17}},"27":{"start":{"line":32,"column":20},"end":{"line":35,"column":23}},"28":{"start":{"line":37,"column":35},"end":{"line":37,"column":110}},"29":{"start":{"line":38,"column":16},"end":{"line":51,"column":17}},"30":{"start":{"line":39,"column":34},"end":{"line":43,"column":67}},"31":{"start":{"line":44,"column":20},"end":{"line":44,"column":67}},"32":{"start":{"line":47,"column":20},"end":{"line":50,"column":23}},"33":{"start":{"line":54,"column":16},"end":{"line":57,"column":19}},"34":{"start":{"line":62,"column":8},"end":{"line":122,"column":11}},"35":{"start":{"line":63,"column":12},"end":{"line":63,"column":74}},"36":{"start":{"line":64,"column":12},"end":{"line":64,"column":75}},"37":{"start":{"line":65,"column":12},"end":{"line":65,"column":74}},"38":{"start":{"line":66,"column":12},"end":{"line":66,"column":76}},"39":{"start":{"line":67,"column":12},"end":{"line":67,"column":68}},"40":{"start":{"line":68,"column":12},"end":{"line":68,"column":64}},"41":{"start":{"line":69,"column":12},"end":{"line":69,"column":79}},"42":{"start":{"line":70,"column":27},"end":{"line":70,"column":49}},"43":{"start":{"line":71,"column":12},"end":{"line":76,"column":13}},"44":{"start":{"line":72,"column":16},"end":{"line":75,"column":19}},"45":{"start":{"line":77,"column":25},"end":{"line":77,"column":33}},"46":{"start":{"line":78,"column":12},"end":{"line":121,"column":13}},"47":{"start":{"line":80,"column":37},"end":{"line":80,"column":111}},"48":{"start":{"line":81,"column":16},"end":{"line":86,"column":17}},"49":{"start":{"line":82,"column":20},"end":{"line":85,"column":23}},"50":{"start":{"line":88,"column":37},"end":{"line":88,"column":71}},"51":{"start":{"line":89,"column":37},"end":{"line":89,"column":59}},"52":{"start":{"line":90,"column":16},"end":{"line":90,"column":68}},"53":{"start":{"line":91,"column":16},"end":{"line":91,"column":72}},"54":{"start":{"line":93,"column":36},"end":{"line":101,"column":18}},"55":{"start":{"line":102,"column":36},"end":{"line":110,"column":17}},"56":{"start":{"line":111,"column":16},"end":{"line":111,"column":56}},"57":{"start":{"line":112,"column":34},"end":{"line":112,"column":70}},"58":{"start":{"line":113,"column":16},"end":{"line":113,"column":48}},"59":{"start":{"line":116,"column":16},"end":{"line":116,"column":35}},"60":{"start":{"line":117,"column":16},"end":{"line":120,"column":19}},"61":{"start":{"line":125,"column":8},"end":{"line":142,"column":11}},"62":{"start":{"line":126,"column":12},"end":{"line":141,"column":13}},"63":{"start":{"line":127,"column":29},"end":{"line":127,"column":99}},"64":{"start":{"line":128,"column":30},"end":{"line":132,"column":63}},"65":{"start":{"line":133,"column":16},"end":{"line":133,"column":62}},"66":{"start":{"line":136,"column":16},"end":{"line":136,"column":35}},"67":{"start":{"line":137,"column":16},"end":{"line":140,"column":19}},"68":{"start":{"line":145,"column":0},"end":{"line":145,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":21},"end":{"line":60,"column":5}},"line":17},"7":{"name":"(anonymous_7)","decl":{"start":{"line":18,"column":47},"end":{"line":18,"column":48}},"loc":{"start":{"line":18,"column":60},"end":{"line":59,"column":9}},"line":18},"8":{"name":"(anonymous_8)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":29},"end":{"line":123,"column":5}},"line":61},"9":{"name":"(anonymous_9)","decl":{"start":{"line":62,"column":47},"end":{"line":62,"column":48}},"loc":{"start":{"line":62,"column":60},"end":{"line":122,"column":9}},"line":62},"10":{"name":"(anonymous_10)","decl":{"start":{"line":124,"column":4},"end":{"line":124,"column":5}},"loc":{"start":{"line":124,"column":23},"end":{"line":143,"column":5}},"line":124},"11":{"name":"(anonymous_11)","decl":{"start":{"line":125,"column":47},"end":{"line":125,"column":48}},"loc":{"start":{"line":125,"column":60},"end":{"line":142,"column":9}},"line":125}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},"type":"if","locations":[{"start":{"line":23,"column":12},"end":{"line":28,"column":13}},{"start":{"line":23,"column":12},"end":{"line":28,"column":13}}],"line":23},"5":{"loc":{"start":{"line":31,"column":16},"end":{"line":36,"column":17}},"type":"if","locations":[{"start":{"line":31,"column":16},"end":{"line":36,"column":17}},{"start":{"line":31,"column":16},"end":{"line":36,"column":17}}],"line":31},"6":{"loc":{"start":{"line":38,"column":16},"end":{"line":51,"column":17}},"type":"if","locations":[{"start":{"line":38,"column":16},"end":{"line":51,"column":17}},{"start":{"line":38,"column":16},"end":{"line":51,"column":17}}],"line":38},"7":{"loc":{"start":{"line":71,"column":12},"end":{"line":76,"column":13}},"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":76,"column":13}},{"start":{"line":71,"column":12},"end":{"line":76,"column":13}}],"line":71},"8":{"loc":{"start":{"line":81,"column":16},"end":{"line":86,"column":17}},"type":"if","locations":[{"start":{"line":81,"column":16},"end":{"line":86,"column":17}},{"start":{"line":81,"column":16},"end":{"line":86,"column":17}}],"line":81}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"file":"auth.ctrl.js","sourceRoot":"","sources":["auth.ctrl.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport * as jwt from 'jsonwebtoken';\nimport * as util from 'util';\nimport * as crypto from 'crypto';\nimport * as nodemailer from 'nodemailer';\nimport { User } from '../models/user';\nimport { default as UserService } from '../services/user.srvc';\n\nclass AuthController {\n\n  async login(req: Request, resp: Response) {\n    req.assert('email', 'Email is not valid').isEmail();\n    req.assert('password', 'Password cannot be blank').notEmpty();\n    req.sanitize('email').normalizeEmail({gmail_remove_dots: false});\n\n    const errors = req.validationErrors();\n\n    if (errors) {\n      return resp.status(401).send({\n        msg: errors,\n        code: 406\n      });\n    }\n    try {\n      const user: User = await UserService.findByEmail(req.body.email);\n      if (!user) {\n        return resp.status(404).send({\n          msg: 'User not found',\n          code: 404\n        });\n      }\n      const isSamePass = await UserService.comparePassword(req.body.password, user.password);\n      if (isSamePass) {\n        const token = jwt.sign({\n          email: user.email,\n          role: user.role,\n          username: user.username\n        }, process.env.JWT_SECRET, {expiresIn: '1h'});\n        return resp.status(200).send({token: token});\n      } else {\n        return resp.status(401).send({\n          msg: 'Unauthorized',\n          status: 401\n        });\n      }\n    } catch (error) {\n      return resp.status(400).send({\n        msg: error,\n        code: 400\n      });\n    }\n  }\n\n  async register(req: Request, res: Response, next: NextFunction) {\n    req.assert('password', 'Password cannot be blank').notEmpty();\n    req.assert('fname', 'First name must be specified').notEmpty();\n    req.assert('lname', 'Last name must be specified').notEmpty();\n    req.assert('username', 'Username must be specified').notEmpty();\n    req.assert('role', 'Role must be specified').notEmpty();\n\n    req.assert('email', 'Email is not valid').isEmail();\n    req.sanitize('email').normalizeEmail({gmail_remove_dots: false});\n\n    const errors = req.validationErrors();\n\n    if (errors) {\n      return res.status(401).send({\n        msg: errors,\n        status: 401\n      });\n    }\n    const user: User = req.body;\n    try {\n      // Check if user already exists\n      const existingUser = await UserService.findByUsernameOrEmail(user.username, user.email);\n      if (existingUser) {\n        return res.status(409).send({\n          msg: 'User already exists',\n          status: 409\n        });\n      }\n      // Generate activation token\n      const qRandomBytes = (util as any).promisify(crypto.randomBytes);\n      const cryptedValue = await qRandomBytes(16);\n      user.activationToken = cryptedValue.toString('hex');\n      user.activationExpires = new Date(Date.now() + 3600000); // 1 hour\n      // Send activation email\n      const transporter = nodemailer.createTransport({\n        host: process.env.SMTP_HOST,\n        port: Number(process.env.SMPT_PORT),\n        logger: true,\n        auth: {\n          user: process.env.SMTP_USER,\n          pass: process.env.SMTP_PASSWORD\n        }\n      });\n      const mailOptions = {\n        to: user.email,\n        from: process.env.SMTP_USER,\n        subject: 'Account activation',\n        text: `You are receiving this email because you (or someone else) have requested account activation.\\n\\n\n          Please click on the following link, or paste this into your browser to complete the process:\\n\\n\n          http://${req.headers.host}/auth/activate/${user.activationToken}\\n\\n\n          If you did not request this, please ignore this email\\n`\n      };\n      await transporter.sendMail(mailOptions);\n      const savedUser: User = await UserService.save(user);\n      res.status(200).send(savedUser);\n    } catch (error) {\n      console.log(error);\n      res.status(400).send({\n        msg: 'Unable to send email',\n        status: 400\n      });\n    }\n  }\n\n  async activate(req: Request, res: Response) {\n    try {\n      const user: User = await UserService.findOneAndUpdate(req.params.activationToken);\n      const token = jwt.sign({\n        email: user.email,\n        role: user.role,\n        username: user.username\n      }, process.env.JWT_SECRET, {expiresIn: '1h'});\n      return res.status(200).send({token: token});\n    } catch (error) {\n      console.log(error);\n      res.status(400).send({\n        msg: 'Activation token expired, please register again',\n        status: 400\n      });\n    }\n  }\n\n}\n\nexport default new AuthController();\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"aa33435e491b9e0810316c409f90b58b3263304a"}
,"/home/richard/Documents/rythm_api/src/controllers/user.ctrl.ts": {"path":"/home/richard/Documents/rythm_api/src/controllers/user.ctrl.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":20},"end":{"line":11,"column":52}},"13":{"start":{"line":14,"column":8},"end":{"line":25,"column":11}},"14":{"start":{"line":15,"column":12},"end":{"line":24,"column":13}},"15":{"start":{"line":16,"column":30},"end":{"line":16,"column":65}},"16":{"start":{"line":17,"column":16},"end":{"line":17,"column":45}},"17":{"start":{"line":20,"column":16},"end":{"line":23,"column":19}},"18":{"start":{"line":28,"column":0},"end":{"line":28,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":22},"end":{"line":26,"column":5}},"line":13},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":47},"end":{"line":14,"column":48}},"loc":{"start":{"line":14,"column":60},"end":{"line":25,"column":9}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"user.ctrl.js","sourceRoot":"","sources":["user.ctrl.ts"],"names":[],"mappings":";;;;;;;;;;AACA,qDAA+D;AAE/D;IAEQ,MAAM,CAAC,GAAY,EAAE,IAAc;;YACvC,IAAI;gBACF,MAAM,KAAK,GAAG,MAAM,mBAAW,CAAC,OAAO,EAAE,CAAC;gBAC1C,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC9B;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,IAAI,CAAC;oBACR,GAAG,EAAE,WAAW;oBAChB,MAAM,EAAE,GAAG;iBACZ,CAAC,CAAC;aACJ;QACH,CAAC;KAAA;CACF;AAED,kBAAe,IAAI,cAAc,EAAE,CAAC","sourcesContent":["import { Request, Response } from 'express';\nimport { default as UserService } from '../services/user.srvc';\n\nclass UserController {\n\n  async getAll(req: Request, resp: Response) {\n    try {\n      const users = await UserService.findAll();\n      resp.status(200).send(users);\n    } catch (error) {\n      resp.send({\n        msg: 'Not found',\n        status: 404\n      });\n    }\n  }\n}\n\nexport default new UserController();"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"222bc542c23c2a371c50c54a1d44b2057a6bb715"}
,"/home/richard/Documents/rythm_api/src/schemas/user.schema.ts": {"path":"/home/richard/Documents/rythm_api/src/schemas/user.schema.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":28}},"4":{"start":{"line":6,"column":19},"end":{"line":21,"column":24}},"5":{"start":{"line":25,"column":0},"end":{"line":42,"column":3}},"6":{"start":{"line":26,"column":17},"end":{"line":26,"column":21}},"7":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"8":{"start":{"line":28,"column":8},"end":{"line":28,"column":22}},"9":{"start":{"line":30,"column":4},"end":{"line":41,"column":7}},"10":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"11":{"start":{"line":32,"column":12},"end":{"line":32,"column":29}},"12":{"start":{"line":34,"column":8},"end":{"line":40,"column":11}},"13":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"14":{"start":{"line":36,"column":16},"end":{"line":36,"column":33}},"15":{"start":{"line":38,"column":12},"end":{"line":38,"column":33}},"16":{"start":{"line":39,"column":12},"end":{"line":39,"column":19}},"17":{"start":{"line":43,"column":0},"end":{"line":46,"column":2}},"18":{"start":{"line":44,"column":21},"end":{"line":44,"column":51}},"19":{"start":{"line":45,"column":4},"end":{"line":45,"column":54}},"20":{"start":{"line":47,"column":23},"end":{"line":47,"column":57}},"21":{"start":{"line":48,"column":0},"end":{"line":48,"column":33}}},"fnMap":{"0":{"name":"save","decl":{"start":{"line":25,"column":32},"end":{"line":25,"column":36}},"loc":{"start":{"line":25,"column":43},"end":{"line":42,"column":1}},"line":25},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":23},"end":{"line":30,"column":24}},"loc":{"start":{"line":30,"column":38},"end":{"line":41,"column":5}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":52},"end":{"line":34,"column":53}},"loc":{"start":{"line":34,"column":67},"end":{"line":40,"column":9}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":37},"end":{"line":43,"column":38}},"loc":{"start":{"line":43,"column":66},"end":{"line":46,"column":1}},"line":43}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{"line":27,"column":4},"end":{"line":29,"column":5}}],"line":27},"1":{"loc":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},{"start":{"line":31,"column":8},"end":{"line":33,"column":9}}],"line":31},"2":{"loc":{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},"type":"if","locations":[{"start":{"line":35,"column":12},"end":{"line":37,"column":13}},{"start":{"line":35,"column":12},"end":{"line":37,"column":13}}],"line":35}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":1},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"user.schema.js","sourceRoot":"","sources":["user.schema.ts"],"names":[],"mappings":";;AAAA,qCAAqC;AAGrC,wCAAwC;AACxC,6BAA6B;AAyB7B,MAAM,UAAU,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IACrC,KAAK,EAAE,EAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;IACnC,QAAQ,EAAE,EAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;IACtC,QAAQ,EAAE,MAAM;IAChB,IAAI,EAAE,MAAM;IAEZ,MAAM,EAAE,OAAO;IAEf,kBAAkB,EAAE,MAAM;IAC1B,oBAAoB,EAAE,IAAI;IAE1B,eAAe,EAAE,MAAM;IACvB,iBAAiB,EAAE,IAAI;IAEvB,OAAO,EAAE;QACP,KAAK,EAAE,MAAM;QACb,KAAK,EAAE,MAAM;QACb,IAAI,EAAE,MAAM;KACb;CACF,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;AAEvB;;GAEG;AACH,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,cAAc,IAAI;IACvC,MAAM,IAAI,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;QAChC,OAAO,IAAI,EAAE,CAAC;KACf;IACD,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAC/B,IAAI,GAAG,EAAE;YACP,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,GAAmB,EAAE,IAAI,EAAE,EAAE;YACxE,IAAI,GAAG,EAAE;gBACP,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;aAClB;YACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,eAAe,GAAG,UAAU,iBAAyB;IACtE,MAAM,QAAQ,GAAI,IAAY,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACzD,OAAO,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpD,CAAC,CAAC;AAGF,MAAM,cAAc,GAAG,QAAQ,CAAC,KAAK,CAAW,MAAM,EAAE,UAAU,CAAC,CAAC;AACpE,kBAAe,cAAc,CAAC","sourcesContent":["import * as mongoose from 'mongoose';\nimport { AuthToken } from '../models/auth-token';\nimport { Profile } from '../models/profile';\nimport * as bcrypt from 'bcrypt-nodejs';\nimport * as util from 'util';\nimport { User } from '../models/user';\n\nexport type UserType = mongoose.Document & {\n\n  email: string,\n  username: string,\n  password: string,\n  role: string,\n\n  active: boolean,\n\n  passwordResetToken: string,\n  passwordResetExpires: Date,\n\n  activationToken: string,\n  activationExpires: Date,\n\n  tokens: Array<AuthToken>,\n\n  profile: Profile,\n\n  comparePassword: (candidatePassword: string, cb: (err: any, isMatch: any) => {}) => void\n};\n\nconst UserSchema = new mongoose.Schema({\n  email: {type: String, unique: true},\n  username: {type: String, unique: true},\n  password: String,\n  role: String,\n\n  active: Boolean,\n\n  passwordResetToken: String,\n  passwordResetExpires: Date,\n\n  activationToken: String,\n  activationExpires: Date,\n\n  profile: {\n    fname: String,\n    lname: String,\n    info: String\n  }\n}, {timestamps: true});\n\n/**\n * Password hash middleware.\n */\nUserSchema.pre('save', function save(next) {\n  const user = this;\n  if (!user.isModified('password')) {\n    return next();\n  }\n  bcrypt.genSalt(10, (err, salt) => {\n    if (err) {\n      return next(err);\n    }\n    bcrypt.hash(user.password, salt, undefined, (err: mongoose.Error, hash) => {\n      if (err) {\n        return next(err);\n      }\n      user.password = hash;\n      next();\n    });\n  });\n});\n\nUserSchema.methods.comparePassword = function (candidatePassword: string) {\n  const qCompare = (util as any).promisify(bcrypt.compare);\n  return qCompare(candidatePassword, this.password);\n};\n\ntype UserType = User & mongoose.Document;\nconst UserRepository = mongoose.model<UserType>('User', UserSchema);\nexport default UserRepository;"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"32054002bd062da7790ab06bd18e2a7ba89664da"}
,"/home/richard/Documents/rythm_api/src/services/user.srvc.ts": {"path":"/home/richard/Documents/rythm_api/src/services/user.srvc.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":15},"end":{"line":11,"column":39}},"13":{"start":{"line":12,"column":13},"end":{"line":12,"column":28}},"14":{"start":{"line":13,"column":22},"end":{"line":13,"column":55}},"15":{"start":{"line":24,"column":8},"end":{"line":27,"column":11}},"16":{"start":{"line":25,"column":25},"end":{"line":25,"column":78}},"17":{"start":{"line":26,"column":12},"end":{"line":26,"column":24}},"18":{"start":{"line":36,"column":8},"end":{"line":39,"column":11}},"19":{"start":{"line":37,"column":25},"end":{"line":37,"column":113}},"20":{"start":{"line":38,"column":12},"end":{"line":38,"column":24}},"21":{"start":{"line":47,"column":8},"end":{"line":49,"column":11}},"22":{"start":{"line":48,"column":12},"end":{"line":48,"column":95}},"23":{"start":{"line":57,"column":8},"end":{"line":60,"column":11}},"24":{"start":{"line":58,"column":25},"end":{"line":58,"column":140}},"25":{"start":{"line":59,"column":12},"end":{"line":59,"column":24}},"26":{"start":{"line":67,"column":8},"end":{"line":69,"column":11}},"27":{"start":{"line":68,"column":12},"end":{"line":68,"column":54}},"28":{"start":{"line":78,"column":25},"end":{"line":78,"column":55}},"29":{"start":{"line":79,"column":8},"end":{"line":79,"column":59}},"30":{"start":{"line":82,"column":0},"end":{"line":82,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":23},"end":{"line":28,"column":5}},"line":23},"7":{"name":"(anonymous_7)","decl":{"start":{"line":24,"column":47},"end":{"line":24,"column":48}},"loc":{"start":{"line":24,"column":60},"end":{"line":27,"column":9}},"line":24},"8":{"name":"(anonymous_8)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":43},"end":{"line":40,"column":5}},"line":35},"9":{"name":"(anonymous_9)","decl":{"start":{"line":36,"column":47},"end":{"line":36,"column":48}},"loc":{"start":{"line":36,"column":60},"end":{"line":39,"column":9}},"line":36},"10":{"name":"(anonymous_10)","decl":{"start":{"line":46,"column":4},"end":{"line":46,"column":5}},"loc":{"start":{"line":46,"column":15},"end":{"line":50,"column":5}},"line":46},"11":{"name":"(anonymous_11)","decl":{"start":{"line":47,"column":47},"end":{"line":47,"column":48}},"loc":{"start":{"line":47,"column":60},"end":{"line":49,"column":9}},"line":47},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":38},"end":{"line":61,"column":5}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":57,"column":47},"end":{"line":57,"column":48}},"loc":{"start":{"line":57,"column":60},"end":{"line":60,"column":9}},"line":57},"14":{"name":"(anonymous_14)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":14},"end":{"line":70,"column":5}},"line":66},"15":{"name":"(anonymous_15)","decl":{"start":{"line":67,"column":47},"end":{"line":67,"column":48}},"loc":{"start":{"line":67,"column":60},"end":{"line":69,"column":9}},"line":67},"16":{"name":"(anonymous_16)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":55},"end":{"line":80,"column":5}},"line":77}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7}},"s":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[1,1,1],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"user.srvc.js","sourceRoot":"","sources":["user.srvc.ts"],"names":[],"mappings":";;;;;;;;;;AACA,wCAAwC;AACxC,6BAA6B;AAC7B,wDAAkE;AAElE;;GAEG;AACH;IAEE;;;;OAIG;IACG,WAAW,CAAC,KAAK;;YACrB,MAAM,IAAI,GAAa,MAAM,qBAAc,CAAC,OAAO,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;YACpE,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAED;;;;;OAKG;IACG,qBAAqB,CAAC,QAAQ,EAAE,KAAK;;YACzC,MAAM,IAAI,GAAS,MAAM,qBAAc,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,EAAC,CAAC,CAAC;YAC/F,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAED;;;;OAIG;IACG,IAAI,CAAC,IAAU;;YACnB,OAAO,CAAC,MAAM,IAAI,qBAAc,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9E,CAAC;KAAA;IAED;;;;OAIG;IACG,gBAAgB,CAAC,eAAe;;YACpC,MAAM,IAAI,GAAS,MAAM,qBAAc,CAAC,gBAAgB,CAAC,EAAC,eAAe,EAAE,eAAe,EAAC,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,EAAE,EAAC,GAAG,EAAE,IAAI,EAAC,CAAC,CAAC;YAC1H,OAAO,IAAI,CAAC;QACd,CAAC;KAAA;IAED;;;OAGG;IACG,OAAO;;YACX,OAAO,MAAM,qBAAc,CAAC,IAAI,EAAY,CAAC;QAC/C,CAAC;KAAA;IAED;;;;;OAKG;IACH,eAAe,CAAC,iBAAyB,EAAE,cAAc;QACvD,MAAM,QAAQ,GAAI,IAAY,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACzD,OAAO,QAAQ,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;IACrD,CAAC;CACF;AAED,kBAAe,IAAI,WAAW,EAAE,CAAC","sourcesContent":["import { User } from '../models/user';\nimport * as bcrypt from 'bcrypt-nodejs';\nimport * as util from 'util';\nimport UserRepository, { UserType } from '../schemas/user.schema';\n\n/**\n * @class UserService\n */\nclass UserService {\n\n  /**\n   * @description Fetches single user from the storage by email\n   * @param email\n   * @returns {Promise<User>}\n   */\n  async findByEmail(email): Promise<User> {\n    const user: UserType = await UserRepository.findOne({email: email});\n    return user;\n  }\n\n  /**\n   * @description Fetches single user from the storage by email or username\n   * @param username\n   * @param email\n   * @returns {Promise<User>}\n   */\n  async findByUsernameOrEmail(username, email): Promise<User> {\n    const user: User = await UserRepository.findOne({$or: [{email: email}, {username: username}]});\n    return user;\n  }\n\n  /**\n   * @description Saves the user in the storage\n   * @param {User} user\n   * @returns {Promise<User>}\n   */\n  async save(user: User): Promise<User> {\n    return (await new UserRepository(user).save()).toObject({ virtuals: true });\n  }\n\n  /**\n   * @description Fetches single user by activationToken and sets active flag\n   * @param activationToken\n   * @returns {Promise<User>}\n   */\n  async findOneAndUpdate(activationToken): Promise<User> {\n    const user: User = await UserRepository.findOneAndUpdate({activationToken: activationToken}, {active: true}, {new: true});\n    return user;\n  }\n\n  /**\n   * @description Fetches all users from the storage\n   * @returns {Promise<User[]>}\n   */\n  async findAll(): Promise<User[]> {\n    return await UserRepository.find() as User[];\n  }\n\n  /**\n   * @description Compares encrypted and decrypted passwords\n   * @param {string} candidatePassword\n   * @param storedPassword\n   * @returns {boolean}\n   */\n  comparePassword(candidatePassword: string, storedPassword): boolean {\n    const qCompare = (util as any).promisify(bcrypt.compare);\n    return qCompare(candidatePassword, storedPassword);\n  }\n}\n\nexport default new UserService();"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"142b3736e40058a6dc6361c15b703b0141cec7ef"}
}
